name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  NPM_VERSION: '9'

jobs:
  # Test Job
  test:
    name: Test Application
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create test environment file
        run: |
          echo "NODE_ENV=test" > .env
          echo "JWT_SECRET=test-secret-key-for-ci-cd-pipeline" >> .env
          echo "PORT=4001" >> .env
          echo "MONGO_URI=mongodb://dummy:27017/test" >> .env

      - name: Run linting
        run: npm run lint

      - name: Run unit tests
        run: npm run test:unit
        env:
          CI: true
          NODE_ENV: test
          JWT_SECRET: test-secret-key-for-ci-cd-pipeline
          PORT: 4001
        timeout-minutes: 5

      - name: Run integration tests
        run: npm run test:integration
        env:
          CI: true
          NODE_ENV: test
          JWT_SECRET: test-secret-key-for-ci-cd-pipeline
          PORT: 4001
        timeout-minutes: 8

      - name: Run API tests
        run: npm run test:api
        env:
          CI: true
          NODE_ENV: test
          JWT_SECRET: test-secret-key-for-ci-cd-pipeline
          PORT: 4001
        timeout-minutes: 8

      - name: Run comprehensive test suite
        run: npm run test:ci
        env:
          CI: true
          NODE_ENV: test
          JWT_SECRET: test-secret-key-for-ci-cd-pipeline
          PORT: 4001
        timeout-minutes: 10

  # Build Job
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            dist/
            node_modules/
            package*.json
            .env.example

  # Deploy to Railway
  deploy:
    name: Deploy to Railway
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Railway
        uses: bervProject/railway-deploy@v1.0.0
        with:
          railway_token: ${{ secrets.RAILWAY_TOKEN }}
          service: ${{ secrets.RAILWAY_SERVICE }}

  # Security Scan
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
